//Двумерный массив инициализация.Двумерный массив индексы.Синтаксис.Пример.Урок #31 - Видео №41. 

#include<iostream>
#include<ctime>
using namespace std;

void main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

	/*
	Метод объявления массива. С помощью константы(неизменная велечина). Где - const int ROW = 3; - это
	количество строк в массиве, const int COL = 4; количество колонок. И затем объявляем массив вот так -
	int arr[ROW][COL]; Эта запись правильная, и при случаи если у нас много циклов, 
	то не меняем их в каждом, а только в условиях ROW и COL.
	*/
	const int ROW = 3;
	const int COL = 4;

	int arr[ROW][COL];

	/*
	Назначаем данные массиву, к одному из его элементу.
	ПО данной записи arr[2][3] = 490; - в 3й строчке,
	и 4той колонке, у нас будет теперь лежать число 490.
	*/
	arr[2][3] = 490;

	/*
	Не вкоем случаи, не выходить за пределы массива. К примеру масив нашь 3 строки и 4 столбца, а 
	мы решили присвоить arr[11][11] = 491648; ХАНА ВСЕМУ, и можем не найти ошибку, и программа, сломаеться, 
	так как мы вышли за пределы массива, ведь изначально размер массива мы объявили ROW = 3, COL = 4.
	*/
	arr[1][3] = 491648;
	arr[1][1] = 25;

	cout << arr[1][3] << endl;
	cout << arr[1][1] << endl;

	/*
	Про заполнениями данных массива. Если уже запись сделать хотябы так - int arr[ROW][COL]{}; 
	то благодаря скобкам - {} - масив заполниться одними нулями.
	*/
	const int ROW2 = 3;
	const int COL2 = 4;
	
	int arr2[ROW2][COL2]{};

	//Заполняем массив данными.
	const int ROW3 = 3;
	const int COL3 = 4;

	int arr3[ROW3][COL3]
	{
		{418,68,16,5},
		{45,6,16,98},
		{28,8,160,87},
	};

	/*Все это заполнения, можно посмотреть через отладчик.*/

	// Инициализация массива. Можно не указать сколько будет строк, но колонки нужно указывать всегда.
	//Примеры верных записей в данной случаи.
	// int arr4[][COL4]{}; - Верно. Такой массив, не имеет ограничей по строкам, но имеет ограничения по колнкам.
	// int arr4[ROW4][]{}; - Не верно.
	// int arr4[][]{}; - Не верно.

	const int COL4 = 5;

	int arr4[][COL4]
	{
		{418,68,16,5},
		{45,6,16,98},
		{28,8,160,87},
		{}, // Раз тут ничего не указали, то заполниться нулями.
		{28,8,160,87},
		// Также в данном массиве, мы не заполняли 5й столбик данными, и он заполниться нулями.
	};
}