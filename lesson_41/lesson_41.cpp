//Указатели c++ что это. Для чего нужны. Указатели c++ разыменование. C++ для начинающих. Урок #46 - Видео №56

#include<iostream>
using namespace std;

/*Указатели (сами по себе, это по сути ярлык, который ссылаеться на область памяти (кучу) где лежат какието данные).
Обозначаються символами (*) и (&). Привидём пример указателя на переменную int a = 5;
указатель - int *pa = &a; название (pa) может быть любым, но по хорошему тону програмирования p - с английского
полное слово указатель, (а) - переменная. Далее (&) он берёт адрес, где лежит переменная и присваем его указателю
переменной int *pa.
Нельзя создавать указатель тип doubl на переменную int. Выдаст ошибку, казатель должен быть таковаже типа как
и объект(переменная) на которую он будет ссылаться.*/

void main()
{
	setlocale(LC_ALL, "ru");

	int a = 5;
	cout << "a\t" << a << endl; //Показывает что в переменной лежит 5.

	int *pa = &a;
	int *pa2 = &a;

	/*Если мы запросим указателя в покажим нам даннеы в терминале с поможью 
	такой записи - cout << "pa\t " << pa << endl; он нам покажет адрес, в котором лежит наша переменная.*/
	cout << "pa\t " << pa << endl;
	/*Раскоментировать указатель. Если мы попросим указатель показать нам данные лежащие по данному адресу,
	то мы должны раскоментпировать указатель вот так - cout << "*pa\t " << *pa << endl; - тоесть,
	мы всего лишь к ра добавили (*), и в таком случаи нам покажет данные лежащие в адресе а не сам адрес.*/
	cout << "*pa\t " << *pa << endl;
	cout<< "pa2\t " << pa2 << endl;

	/*Чтобы мы могли не просто указателями выводить даннеы, но и с помощью указателей работать с данными.
	Мы просто прописываем уже сразу название указателя, к примеру *pa2 = 2; и сразу просим туда внеси 2.
	Что это значит и как приминять? всё что идёт выше *pa2 = 2; то там будет лежать 5 как изначально прописали,
	а уже после записи *pa2 = 2; будет идти 2. Я так понимаю, где в какойто момент, нам не нужно чтоб
	данный объект(переменная) int была везде поменена на другое число, а только в определённый момент, с определённого
	действия и так далее, потециал работы на мой взгляд большой уазателей.*/
	*pa2 = 2;

	cout << "a\t" << a << endl;
	cout << "*pa\t " << *pa << endl;
}