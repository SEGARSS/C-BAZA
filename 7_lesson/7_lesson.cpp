//Инкремент и декремент. Постфиксный и префиксный. Пример. Синтаксис. C++ для начинающих. Урок #9 - Видео №12.


#include <iostream>
using namespace std;

void main()
{
	setlocale(LC_ALL, "ru");
	cout << "Инкремент - Пример с переменной (a)" << endl;
	//Инкремент идёт после переменной.
	int a = 1;
	cout << a << endl;
	a++;
	cout << a << endl << endl;

	cout << "Декремент - Пример с переменной (b)" << endl ;
			
	//декремент простовляеться перед переменной.
	int b = 1;
	cout << b << endl;
	cout << --b << endl << endl; /*В данном примере, мы сразу в указали чтоб нам отняло -1 в терминале, без дополнительной
	записи - b--, но есдиственное что для терминало нужно сразу указать приорите, что сначала отнеми единицу а 
	потом покажи нам данные. Еслиб написали так cout << b-- << endl; получили бы на выходите также 1, он бы не понял
	что требуеться отнять, так как после b идёт -- и больше ничего и выше строчки cout << --b << endl; мы не указывали
	b--.*/
	

	// ++ значит прибавить единицу, а если -- то уменьшение на еденицу.

	cout << "Пример в коде" << endl;
	
	int c = 1, v;
	v = ++c * c;
	cout << v << endl;
	cout << c << endl;

	/*Важное уточнение. Приоритет вывода при использовании инкримента и дикримента.*/
	cout << "Пример пример приоритета №1" << endl;
	int d = 1, m;
	m = d++ * d;
	cout << m << endl;
	cout << d << endl << endl;

	/*Если, инкримент или дикримен поставить после переменной как в примере выше, то прибавку мы не получим.*/
	/*Боее простой пример.*/
	cout << "Пример пример приоритета №2" << endl;
	int g = 1;
	int l = 1;
	int o = 1;
	cout << g << endl;
	cout << g++ << endl; // Сдесь не получим прибавку +1, потомучто в приоритете, сначала идёт вывод данных переменной, а потом только прибавка.
	cout << ++l << endl; // Тут мы получим прибку +1
	cout << o++ << " " << o << endl; /* ВИдим наглядно, что первое число осталось 1, 
	но из за того что добавили инкримент++, следующий вывод видим уже прибавленную + 1*/

	
}