//Указатели c++ что это. Для чего нужны. Указатели c++ разыменование. C++ для начинающих. Урок #46 - Видео №56

#include<iostream>
using namespace std;

/*
Указатели (сами по себе, это по сути ярлык, который ссылаеться на область памяти (кучу) где лежат какието данные).
Обозначаються символами (*) и (&). Привидём пример указателя на переменную int a = 5;
указатель - int *pa = &a; название (pa) может быть любым, но по хорошему тону програмирования p - с английского
полное слово указатель, (а) - переменная. Далее (&) он берёт адрес, где лежит переменная и присваем его указателю
переменной int *pa.
Нельзя создавать указатель тип doubl на переменную int. Выдаст ошибку, указатель должен быть таковаже типа как
и объект(переменная) на которую он будет ссылаться.
*/

void main()
{
	setlocale(LC_ALL, "ru");

	int a = 5;
	cout << "Данные присвоенные переменной (a) - " << a << endl; //Показывает что в переменной лежит 5.

	int *pa = &a;

	cout << "Смотрим адрес у - " << "pa\t " << pa << endl; //покажет адрес, в котором лежит наша переменная.
	cout << "Смотрим данные лежащиев в - " << "*pa\t " << *pa << endl; //покажет данные лежащие в адресе а не сам адрес.

	/*
	Чтобы мы могли не просто указателями выводить данные, но и с помощью указателей работать с данными.
	Мы просто прописываем уже сразу название указателя, к примеру *pa = 2; и сразу просим туда внеси 2.
	Что это значит и как приминять? всё что идёт выше записи *pa = 2; то там будет лежать 5 как изначально прописали,
	а уже после записи *pa = 2; будет идти 2. Я так понимаю, где в какойто момент, нам не нужно чтоб
	данный объект(переменная) int была везде поменена на другое число, а только в определённый момент, с определённого
	действия и так далее, потециал работы на мой взгляд большой уазателей.
	*/

	cout << endl;

	cout << "Присваемваем новые данные *pa = 2;" << endl;

	*pa = 2;
	cout << "Смотрим адрес который у - " << "pa\t " << pa << endl;  // Адрес тотже, не поменялся.
	cout << "Смотрим данные лежащиев в - " << "*pa - " << *pa << endl; // Данные поменялись.

	/*
	Уточнение. Заменив в адресе данные, тоесть *pa = 2;, в переменной (а) теперь будет лежать (2).
	Неважно сколько мы указателей создадим. Если хоть один указатель внёс свои данные, это отразиться на все,
	так как если указатели с другим именем тоже ссылаются на переменную (а) они все покажут новые данные.
	*/

	cout << endl;

	cout << "Пример что показывают другие указатели если мы хотябы одному указали данные *pa = 2;" << endl;

	int *pa1 = &a;
	int *pa2 = &a;
	int *pa3 = &a;

	cout << "Смотрим адрес который у - " << "pa1\t " << pa1 << endl;  // Адрес тотже, не поменялся.
	cout << "Смотрим адрес который у - " << "pa2\t " << pa2 << endl;  // Адрес тотже, не поменялся.
	cout << "Смотрим адрес который у - " << "pa3\t " << pa3 << endl;  // Адрес тотже, не поменялся.

	cout << "Смотрим данные лежащиев в - " << "*pa - " << *pa1 << endl; // Данные поменялись.
	cout << "Смотрим данные лежащиев в - " << "*pa - " << *pa2 << endl; // Данные поменялись.
	cout << "Смотрим данные лежащиев в - " << "*pa - " << *pa3 << endl; // Данные поменялись.

	cout << "Данные присвоенные переменной (a) после записи - *pa = 2; - " << a << endl;
	// Всё потому что все они ссылаются на один и тот же адрес.
}